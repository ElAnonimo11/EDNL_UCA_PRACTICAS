#ifndef _EJERCICIO_4_P2_HPP_
#define _EJERCICIO_4_P2_HPP_

#include <cstddef>
#include <limits>

/*Una posible representaci√≥n del TAD √Årbol Binario consiste en almacenar los
 * elementos del √°rbol en un vector cuyo tama√±o, ùëÅ = 2
 * ùêª+1 ‚àí 1 , depende de la altura
 * m√°xima ùêª que pueda llegar a alcanzar el √°rbol. Cada nodo del √°rbol se corresponde con
 * una √∫nica posici√≥n del vector, la cual viene determinada por el recorrido en inorden del
 * √°rbol. Es decir, en el vector aparecen primero los nodos del sub√°rbol izquierdo en inorden,
 * luego la ra√≠z y a continuaci√≥n los nodos del sub√°rbol derecho tambi√©n en inorden. Por
 * ejemplo, el √°rbol de la figura se representa como el vector
 */

template <typename T>
class Abin
{
    public:
        using nodo = size_t;
        static const nodo NODO_NULO;

    private:
        size_t prof_max,
               max_nodos;
        T* elems;
};

template <typename T>
const typename Abin<T>::nodo Abin<T>::NODO_NULO{std::numeric_limits<nodo>::max()};

#endif
